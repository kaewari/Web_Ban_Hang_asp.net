@model SNShop.Models.User

@{
    ViewBag.Title = "Create_Users";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Tạo user</h2>
<h3 class="text-danger">@ViewData["loi"]</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal row">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6 col-xs-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Truename, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Truename, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Truename, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ID_Card, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ID_Card, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID_Card, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="col-md-6 col-xs-12">

            <div class="form-group">
                <label class="form-control-label col-md-2">Role</label>
                <div class="col-md-10">
                    @Html.DropDownList("VT", null, htmlAttributes: new { @class = "form-control", @style = "width:100%", @id = "ddlRole" })
                    <span class="field-validation-valid text-danger" data-valmsg-for="Role" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PR", null, htmlAttributes: new { @class = "form-control", @style = "width:100%", @id = "ddlProvince" })
                    @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DT", null, htmlAttributes: new { @class = "form-control", @style = "width:100%", @id = "ddlDistrict" })
                    @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-group form-horizontal row text-center" style="width:100%">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Save" class="btn btn-danger" autocomplete="off" />
                <a class="btn btn-primary" style="margin-left:5px" href="@Url.Action("List_Users","User")">Back to list</a>
            </div>
        </div>
    </div>
}
<script>
    var user = {
        init: function () {

            user.loadProvince();
            user.registerEvent();
            user.loadRole();
        },
        registerEvent: function () {
            $('#ddlProvince').off('change').on('change', function () {
                var id = $(this).val();
                if (id != '') {
                    user.loadDistrict(parseInt(id));
                }
                else {
                    $('#ddlDistrict').html('');
                }
            });
        },
        loadProvince: function () {

            $.ajax({
                url: '/Account/LoadProvince',
                type: "POST",
                dataType: "json",
                success: function (response) {
                    if (response.status == true) {
                        var html = '<option value="">--Chọn tỉnh thành--</option>';
                        var data = response.data;
                        $('#ddlDistrict')
                            .find('option')
                            .remove()
                            .end()
                            .append('<option value="0"></option>')
                            .val('0');
                        console.info(data)
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.Id + '">' + item.Name + '</option>'
                        });
                        $('#ddlProvince').html(html);
                    }
                }
            })
        },
        loadDistrict: function (id) {
            $.ajax({
                url: '/Account/LoadDistrict',
                type: "POST",
                data: { provinceID: id },
                dataType: "json",
                success: function (response) {
                    if (response.status == true) {
                        var html = '<option value="">--Chọn quận huyện--</option>';
                        var data = response.data;
                        console.info(data)

                        $.each(data, function (i, item) {
                            html += '<option value="' + item.Id + '">' + item.Name + '</option>'
                        });
                        $('#ddlDistrict').html(html);
                    }
                }
            })
        },
        loadRole: function () {
            $('#ddlRole').val("2").change();
        }
    }
    user.init();
</script>