@model SNShop.Models.User
@{
    ViewBag.Title = "Edit_Users_Image";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h3 class="text-danger">@ViewData["loi"]</h3>
<div class="row">
    <div class="col-md-8 col-xs-12">
        @using (Html.BeginForm("Edit_Users", "UserImage", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Truename, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Truename, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Truename, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ID_Card, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ID_Card, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ID_Card, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-around col-md-10">
                        @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", @id = "pass" } })
                        <input class="col-md-2 btn btn-danger" id="Hash" type="button" value="Hash" onclick="Hash()" />
                        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-control-label col-md-2">Role</label>
                    <div class="col-md-10">
                        @Html.DropDownList("VT", null, htmlAttributes: new { @class = "form-control", @style = "width:100%", @id = "ddlRole" })
                        <span class="field-validation-valid text-danger" data-valmsg-for="Role" data-valmsg-replace="true"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PR", null, htmlAttributes: new { @class = "form-control", @style = "width:100%", @id = "ddlProvince" })
                        @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DT", null, htmlAttributes: new { @class = "form-control", @style = "width:100%", @id = "ddlDistrict" })
                        @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12 row">
                        <input type="submit" value="Save" class="btn btn-danger" />
                        <a class="btn btn-primary" style="margin-left:5px" href="@Url.Action("List_Users","User")">Back to List</a>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-4 col-xs-12">
        @using (Html.BeginForm("Edit_Users_Image", "UserImage", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.HiddenFor(model => model.Id)
            </div>
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <img src="@Model.Image" name="Image" id="Image" width="250" height="250" />
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <h4 class="text-danger">Ảnh có đuôi file là .png hoặc .jpg</h4>
            <div class="form-horizontal">
                <input name="File" type="file" accept="image/*" id="File" required />
                <div class="form-group" style="margin-top:10px">
                    <div class="col-md-offset-2">
                        <input class="btn btn-success" type="submit" value="Thay đổi ảnh" autocomplete="off" />
                        <a class="btn btn-primary" style="margin-left:5px" href="@Url.Action("List_Users","User")">Back to list</a>
                        <a class="btn btn-danger" href="@Url.Action("Delete_User_Image","UserImage", new { id = Model.Id, url = ViewBag.Title })">Xóa ảnh</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script defer>
    var data = document.getElementById("ddlRole");
        function Hash() {
        var hash = CryptoJS.MD5(document.getElementById("pass").value);
        return hash
    }

    document.getElementById("Hash").onclick = function () {
        var x = Hash();
        document.getElementById("pass").value = x;
        document.getElementById("pass").innerHTML = x;
    };
    for (var i = 0; i < data.length; i++) {
        if (data[i].value == @ViewBag.Role) {
            data[i].selected = "selected";
            break;
        }
    }
    var user = {
        init: function () {
            user.loadProvince();
            if (@Model.ProvinceID != 0) {
                user.loadDistrict(@Model.ProvinceID);
            }

            user.registerEvent();
        },
        registerEvent: function () {
            $('#ddlProvince').off('change').on('change', function () {
                var id = $(this).val();
                if (id != '') {
                    user.loadDistrict(parseInt(id));
                }
                else {
                    $('#ddlDistrict').html('');
                }
            });
        },
        loadProvince: function () {
            $.ajax({
                url: '/Account/LoadProvince',
                type: "POST",
                dataType: "json",
                success: function (response) {
                    if (response.status == true) {
                        var html = '<option value="">--Chọn tỉnh thành--</option>';
                        var data = response.data;
                        $('#ddlDistrict')
                            .find('option')
                            .remove()
                            .end()
                            .append('<option value=""></option>')
                            .val('0')
                        $.each(data, function (i, item) {
                            if (item.Id == @Model.ProvinceID)
                                html += '<option selected value="' + item.Id + '">' + item.Name + '</option>'
                            else
                                html += '<option value="' + item.Id + '">' + item.Name + '</option>'
                        });
                        $('#ddlProvince').html(html);
                    }
                }
            })
        },
        loadDistrict: function (id) {
            $.ajax({
                url: '/Account/LoadDistrict',
                type: "POST",
                data: { provinceID: id },
                dataType: "json",
                success: function (response) {
                    if (response.status == true) {
                        var html = '<option value="">--Chọn quận huyện--</option>';
                        var data = response.data;
                        $.each(data, function (i, item) {
                            if (item.Id == @Model.DistrictID)
                                html += '<option selected value="' + item.Id + '">' + item.Name + '</option>'
                            else
                                html += '<option value="' + item.Id + '">' + item.Name + '</option>'
                        });
                        $('#ddlDistrict').html(html);
                    }
                }
            })
        },
    }
    user.init();

</script>

